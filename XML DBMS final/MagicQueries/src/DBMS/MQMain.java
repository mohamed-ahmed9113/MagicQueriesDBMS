package DBMS;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

@SuppressWarnings("serial")
public class MQMain extends javax.swing.JFrame {

	/** Creates new form UserName */
	public MQMain() 
	{
		this.setLocation(530, 160);
		initComponents();
	}

	private String url;
	private String nameStat;
	private String passwordStat;

	public String getNameStat() {
		return nameStat;
	}

	public String getPasswordStat() {
		return passwordStat;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		jDesktopPane1 = new javax.swing.JDesktopPane();
		OK = new javax.swing.JToggleButton();
		jSeparator1 = new javax.swing.JSeparator();
		userName = new javax.swing.JTextField();
		jLabel1 = new javax.swing.JLabel();
		password = new javax.swing.JPasswordField();
		jLabel2 = new javax.swing.JLabel();
		createSchema = new javax.swing.JToggleButton();
		loadSchema = new javax.swing.JToggleButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("User Info");
		setResizable(false);

		OK.setFont(new java.awt.Font("Tahoma", 1, 14));
		OK.setForeground(new java.awt.Color(0, 0, 153));
		OK.setText("OK");
		OK.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				OKActionPerformed(evt);
			}
		});
		OK.setBounds(150, 140, 91, 25);
		jDesktopPane1.add(OK, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jSeparator1.setBounds(0, 180, 265, 10);
		jDesktopPane1.add(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
		userName.setBounds(40, 40, 200, 30);
		jDesktopPane1.add(userName, javax.swing.JLayeredPane.DEFAULT_LAYER);

		jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
		jLabel1.setForeground(new java.awt.Color(255, 255, 255));
		jLabel1.setText("User Name");
		jLabel1.setBounds(40, 20, 61, 14);
		jDesktopPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
		password.setBounds(40, 100, 200, 30);
		jDesktopPane1.add(password, javax.swing.JLayeredPane.DEFAULT_LAYER);

		jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
		jLabel2.setForeground(new java.awt.Color(255, 255, 255));
		jLabel2.setText("Password");
		jLabel2.setBounds(40, 80, 54, 14);
		jDesktopPane1.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

		createSchema.setBackground(new java.awt.Color(255, 255, 255));
		createSchema.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
		createSchema.setForeground(new java.awt.Color(102, 0, 0));
		createSchema.setText("Create Schema");
		createSchema.setBounds(10, 200, 120, 40);
		createSchema.setEnabled(false);
		jDesktopPane1.add(createSchema, javax.swing.JLayeredPane.DEFAULT_LAYER);

		loadSchema.setBackground(new java.awt.Color(255, 255, 255));
		loadSchema.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
		loadSchema.setForeground(new java.awt.Color(102, 0, 0));
		loadSchema.setText("Load Schema");
		loadSchema.setBounds(140, 200, 120, 40);
		loadSchema.setEnabled(false);
		jDesktopPane1.add(loadSchema, javax.swing.JLayeredPane.DEFAULT_LAYER);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(jDesktopPane1,
								javax.swing.GroupLayout.DEFAULT_SIZE, 270,
								Short.MAX_VALUE).addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)
						.addComponent(jDesktopPane1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 252,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));

		pack();
	}

	@SuppressWarnings("deprecation")
	private void OKActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_OKActionPerformed

		nameStat = userName.getText();
		passwordStat = password.getText();
		if (nameStat.equals("MagicQueries") && passwordStat.equals("mammam")) {
			createSchema.setEnabled(true);
			createSchema.addActionListener(new ActionListener() {
				@Override
				// create new schema
				public void actionPerformed(ActionEvent arg0) {
					JFileChooser chooser = new JFileChooser();
					try {
						int returnVal = chooser.showSaveDialog(chooser);
						if (returnVal == JFileChooser.APPROVE_OPTION) {
							url = chooser.getSelectedFile().getPath();
							int j = 0;
							for (j = url.length() - 1; j >= 0; j--) {
								if (url.charAt(j) == '\\')
									break;
							}
							String schemaURL = url.substring(0, j);
							String schemaName = url.substring(j + 1,
									url.length());
							Schema schema = new Schema(schemaURL, schemaName);
							schema.applyChanges();
							MagicQueriesGUI mainWindow = new MagicQueriesGUI();
							mainWindow.setSchema(schema);
							ArrayList<String> tablesList = schema
									.getTableNames();
							int length = tablesList.size();
							mainWindow.tables = new String[length];
							for (int i = 0; i < length; i++) 
							{
								mainWindow.tables[i] = tablesList.get(i);
							}
							setVisible(false);
						}
					} catch (Exception e) {
						JOptionPane.showMessageDialog(null, e.getMessage());
					}
				}
			});
			// load previous created schema
			loadSchema.setEnabled(true);
			loadSchema.addActionListener(new ActionListener() {

				public void actionPerformed(ActionEvent arg0) {
					JFileChooser chooser = new JFileChooser();
					try {
						int returnVal = chooser.showOpenDialog(chooser);
						if (returnVal == JFileChooser.APPROVE_OPTION) {
							url = chooser.getSelectedFile().getPath();
							int j = 0;
							for (j = url.length() - 1; j >= 0; j--) {
								if (url.charAt(j) == '\\')
									break;
							}
							String schemaURL = url.substring(0, j);
							String schemaName = url.substring(j + 1,
									url.length() - 4);
							Schema schema = new Schema(schemaURL, schemaName,
									true);
							schema.applyChanges();
							MagicQueriesGUI mainWindow = new MagicQueriesGUI();
							mainWindow.setSchema(schema);
							mainWindow.refreshTableNames();
							mainWindow.setSchemaTables();
							setVisible(false);
						}
					} catch (Exception e) {
						JOptionPane.showMessageDialog(null, e.getMessage());
					}
				}
			});
		} else {
			JOptionPane.showMessageDialog(OK, "Invalid username or password");
		}
	}

	public static void main(String args[]) {
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MQMain.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MQMain.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MQMain.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MQMain.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new MQMain().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JToggleButton createSchema;
	private javax.swing.JDesktopPane jDesktopPane1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JToggleButton loadSchema;
	private javax.swing.JPasswordField password;
	private javax.swing.JToggleButton OK;
	private javax.swing.JTextField userName;
	// End of variables declaration//GEN-END:variables
}

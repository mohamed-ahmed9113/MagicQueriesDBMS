package DBMS;

import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

@SuppressWarnings("serial")
public class MagicQueriesGUI extends javax.swing.JFrame {

	/** Creates new form MainMenu */
	public MagicQueriesGUI() {
		initComponents();
		setVisible(true);
		adjustLook();
		view.setSize(1150, 440);
		this.setExtendedState(JFrame.MAXIMIZED_BOTH);
	}

	private Schema schema;
	private String[] query = { "" };
	protected String[] tables = { "" };
	private Object[][] table;
	private String[] columnNames = { "" };
	private String currentTable = "";
	private Table table2D;

	public String[] getQuery() {
		return query;
	}

	public Schema getSchema() {
		return schema;
	}

	public void setSchema(Schema schema) {
		this.schema = schema;
		refreshTableNames();
	}

	public void refreshTableNames() {
		ArrayList<String> tablesList = schema.getTableNames();
		int length = tablesList.size();
		tables = new String[length];
		for (int i = 0; i < length; i++) {
			tables[i] = tablesList.get(i);
		}
	}

	public Object[][] getTable() {
		return table;
	}

	public void setTable(Object[][] table) {
		this.table = table;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void addTableView() {
		view.addTab("My Schema", jPanel1);
		jTable1.setModel(new javax.swing.table.DefaultTableModel(table,
				columnNames));
		scrollTable.setViewportView(jTable1);
	}

	void setSchemaTables() {
		schemaTables.setModel(new javax.swing.AbstractListModel() {
			String[] strings = tables;

			public int getSize() {
				return strings.length;
			}

			public Object getElementAt(int i) {
				if (i == strings.length - 1) {
					currentTable = strings[i];
				}
				return strings[i];
			}
		});
		jScrollPane2.setViewportView(schemaTables);
	}

	private void initComponents() {
		jScrollPane1 = new javax.swing.JScrollPane();
		queryField = new javax.swing.JTextArea();
		jSeparator1 = new javax.swing.JSeparator();
		jSeparator3 = new javax.swing.JSeparator();
		jLabel1 = new javax.swing.JLabel();
		jDesktopPane1 = new javax.swing.JDesktopPane();
		text = new javax.swing.JLabel();
		jSeparator4 = new javax.swing.JSeparator();
		dataType = new javax.swing.JComboBox();
		addColumnButton = new javax.swing.JToggleButton();
		addTableButton = new javax.swing.JToggleButton();
		tableNameText = new javax.swing.JTextField();
		addColumnButton2 = new javax.swing.JButton();
		columnNameText = new javax.swing.JTextField();
		addTableButton1 = new javax.swing.JButton();
		jSeparator5 = new javax.swing.JSeparator();
		jSeparator6 = new javax.swing.JSeparator();
		jDesktopPane2 = new javax.swing.JDesktopPane();
		view = new javax.swing.JTabbedPane();
		jPanel1 = new javax.swing.JPanel();
		jLabel2 = new javax.swing.JLabel();
		jSeparator2 = new javax.swing.JSeparator();
		jScrollPane2 = new javax.swing.JScrollPane();
		schemaTables = new javax.swing.JList();
		jPanel2 = new javax.swing.JPanel();
		scrollTable = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		runButton = new javax.swing.JToggleButton();
		jMenuBar1 = new javax.swing.JMenuBar();
		fileButton = new javax.swing.JMenu();
		jMenuItem2 = new javax.swing.JMenuItem();
		jMenuItem1 = new javax.swing.JMenuItem();
		editButton = new javax.swing.JMenu();
		copyButton = new javax.swing.JMenuItem();
		cutButton = new javax.swing.JMenuItem();
		pastButton = new javax.swing.JMenuItem();
		viewMenu = new javax.swing.JMenu();
		helpMenu = new javax.swing.JMenu();
		instructions = new javax.swing.JMenuItem();
		aboutUs = new javax.swing.JMenuItem();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Main Menu");
		setMinimumSize(new java.awt.Dimension(500, 500));
		setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
		setName("MainMenu"); // NOI18N

		jScrollPane1.setBackground(new java.awt.Color(255, 255, 204));
		jScrollPane1.setBorder(new javax.swing.border.LineBorder(
				new java.awt.Color(51, 51, 51), 1, true));

		queryField.setColumns(100);
		queryField.setFont(new java.awt.Font("Arial", 0, 13));
		queryField.setRows(5);
		queryField.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				queryFieldKeyPressed(evt);
			}
		});
		jScrollPane1.setViewportView(queryField);

		jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

		jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18));
		jLabel1.setForeground(new java.awt.Color(0, 153, 0));
		jLabel1.setText("Enter the query here :");

		text.setFont(new java.awt.Font("Tahoma", 1, 14));
		text.setForeground(new java.awt.Color(255, 255, 255));
		text.setText("Actions:");
		text.setBounds(10, 10, 110, 20);
		jDesktopPane1.add(text, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jSeparator4.setBounds(10, 32, 110, 10);
		jDesktopPane1.add(jSeparator4, javax.swing.JLayeredPane.DEFAULT_LAYER);

		dataType.setBackground(new java.awt.Color(204, 255, 204));
		dataType.setModel(new javax.swing.DefaultComboBoxModel(new String[] {
				"String", "Integer", "Long", "Double", "Float", "Boolean",
				"Date" }));
		dataType.setEnabled(false);
		dataType.setBounds(10, 300, 130, 30);
		jDesktopPane1.add(dataType, javax.swing.JLayeredPane.DEFAULT_LAYER);

		addColumnButton.setBackground(new java.awt.Color(255, 255, 204));
		addColumnButton.setText("Add Column");
		addColumnButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addColumnButtonActionPerformed(evt);
			}
		});
		addColumnButton.setBounds(10, 203, 130, 30);
		jDesktopPane1.add(addColumnButton,
				javax.swing.JLayeredPane.DEFAULT_LAYER);

		addTableButton.setBackground(new java.awt.Color(255, 255, 204));
		addTableButton.setText("Add Table");
		addTableButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addTableButtonActionPerformed(evt);
			}
		});
		addTableButton.setBounds(10, 63, 130, 30);
		jDesktopPane1.add(addTableButton,
				javax.swing.JLayeredPane.DEFAULT_LAYER);

		tableNameText.setText("table name ....");
		tableNameText.setEnabled(false);
		tableNameText.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tableNameTextActionPerformed(evt);
			}
		});
		tableNameText.setBounds(10, 100, 130, 24);
		jDesktopPane1
				.add(tableNameText, javax.swing.JLayeredPane.DEFAULT_LAYER);

		addColumnButton2.setBackground(new java.awt.Color(204, 204, 255));
		addColumnButton2.setText("Add");
		addColumnButton2.setEnabled(false);
		addColumnButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					addColumnButton2ActionPerformed(evt);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
		addColumnButton2.setBounds(50, 350, 51, 23);
		jDesktopPane1.add(addColumnButton2,
				javax.swing.JLayeredPane.DEFAULT_LAYER);

		columnNameText.setText("column name ....");
		columnNameText.setEnabled(false);
		columnNameText.setBounds(10, 250, 130, 24);
		columnNameText.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				columnNameTextActionPerformed(evt);
			}
		});
		jDesktopPane1.add(columnNameText,
				javax.swing.JLayeredPane.DEFAULT_LAYER);

		addTableButton1.setBackground(new java.awt.Color(204, 204, 255));
		addTableButton1.setText("Add");
		addTableButton1.setEnabled(false);
		addTableButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addTableButton1ActionPerformed(evt);
			}
		});
		schemaTables.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				try {
					schemaTablesMousePressed(evt);
				} catch (Exception e) {
					JOptionPane.showMessageDialog(null, "Table is empty");
				}
			}
		});
		addTableButton1.setBounds(50, 140, 51, 23);
		jDesktopPane1.add(addTableButton1,
				javax.swing.JLayeredPane.DEFAULT_LAYER);
		jSeparator5.setBounds(10, 180, 130, 10);
		jDesktopPane1.add(jSeparator5, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jSeparator6.setBounds(10, 190, 130, 10);
		jDesktopPane1.add(jSeparator6, javax.swing.JLayeredPane.DEFAULT_LAYER);

		jDesktopPane2.setForeground(new java.awt.Color(204, 204, 0));

		view.setForeground(new java.awt.Color(0, 0, 102));
		view.setFont(new java.awt.Font("Tahoma", 1, 12));

		jPanel1.setBackground(new java.awt.Color(255, 255, 204));

		jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
		jLabel2.setText("Tables :");
		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																jScrollPane2,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																685,
																Short.MAX_VALUE)
														.addComponent(
																jLabel2,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																96,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jSeparator2,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																372,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap()));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(
												jLabel2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												26,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jSeparator2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												10,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(2, 2, 2)
										.addComponent(
												jScrollPane2,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												275, Short.MAX_VALUE)
										.addContainerGap()));

		view.addTab("My Schema", jPanel1);
		jTable1.setModel(new javax.swing.table.DefaultTableModel(table,
				columnNames));
		scrollTable.setViewportView(jTable1);

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(
				jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				scrollTable, javax.swing.GroupLayout.DEFAULT_SIZE, 705,
				Short.MAX_VALUE));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				scrollTable, javax.swing.GroupLayout.DEFAULT_SIZE, 341,
				Short.MAX_VALUE));

		view.addTab("View", jPanel2);

		view.setBounds(10, 10, 710, 370);
		jDesktopPane2.add(view, javax.swing.JLayeredPane.MODAL_LAYER);

		runButton.setBackground(new java.awt.Color(204, 51, 0));
		runButton.setFont(new java.awt.Font("Tahoma", 1, 12));
		runButton.setText("RUN");
		runButton.setFocusable(false);
		runButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		runButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		runButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					runButtonActionPerformed(evt);
				} catch (Exception e) {

					e.printStackTrace();
				}
			}
		});

		fileButton.setText("File");

		jMenuItem2.setText("New Schema");
		fileButton.add(jMenuItem2);

		jMenuItem1.setText("Exit");
		fileButton.add(jMenuItem1);

		jMenuBar1.add(fileButton);

		editButton.setText("Edit");

		copyButton.setText("Copy");
		editButton.add(copyButton);

		cutButton.setText("Cut");
		editButton.add(cutButton);

		pastButton.setText("Past");
		editButton.add(pastButton);

		jMenuBar1.add(editButton);

		viewMenu.setText("View");
		jMenuBar1.add(viewMenu);

		helpMenu.setText("Help");

		instructions.setText("Instructions");
		helpMenu.add(instructions);

		aboutUs.setText("About");
		helpMenu.add(aboutUs);

		jMenuBar1.add(helpMenu);

		setJMenuBar(jMenuBar1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jDesktopPane1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										147,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(14, 14, 14)
								.addComponent(jSeparator1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										9,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jScrollPane1,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		679,
																		Short.MAX_VALUE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		runButton,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		57,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addComponent(
														jLabel1,
														javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jSeparator3,
														javax.swing.GroupLayout.Alignment.LEADING,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														742, Short.MAX_VALUE)
												.addComponent(
														jDesktopPane2,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														742, Short.MAX_VALUE))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addGroup(
														javax.swing.GroupLayout.Alignment.LEADING,
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										jLabel1)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																								.addComponent(
																										jScrollPane1,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										143,
																										javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGap(72,
																										72,
																										72)
																								.addComponent(
																										runButton,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										47,
																										javax.swing.GroupLayout.PREFERRED_SIZE)))
																.addGap(18, 18,
																		18)
																.addComponent(
																		jSeparator3,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		14,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jDesktopPane2,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		398,
																		Short.MAX_VALUE))
												.addComponent(
														jSeparator1,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														612, Short.MAX_VALUE)
												.addComponent(
														jDesktopPane1,
														javax.swing.GroupLayout.Alignment.LEADING,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														612, Short.MAX_VALUE))
								.addContainerGap()));

		pack();
	}// </editor-fold>

	private void columnNameTextActionPerformed(java.awt.event.ActionEvent evt) {

	}

	private void tableNameTextActionPerformed(java.awt.event.ActionEvent evt) {

	}

	private void schemaTablesMousePressed(java.awt.event.MouseEvent evt)
			throws Exception {
		currentTable = schemaTables.getSelectedValue().toString();
		Object[][] result = new Controller(schema, currentTable).selectAll();
		String[][] printedTable;
		printedTable = new String[result[0].length][result.length];
		int counter1 = 0;
		int counter2 = 0;
		for (int i = 0; i < printedTable.length; i++) {
			for (int j = 0; j < printedTable[i].length; j++) {
				try {
					printedTable[counter2][counter1] = result[j][i].toString();
				} catch (Exception e) {
					printedTable[counter2][counter1] = "NULL";
				}
				counter1++;
			}
			counter2++;
			counter1 = 0;
		}
		counter2 = 0;
		table = printedTable;
		table2D = new Table(schema.getTableURL(currentTable));
		columnNames = table2D.getColumns();
		addTableView();

	}

	private void addTableButtonActionPerformed(java.awt.event.ActionEvent evt) {
		tableNameText.setEnabled(true);
		addTableButton1.setEnabled(true);
		if (tableNameText.getText().equals("table name ....")) {
			tableNameText.setText("");
		}

	}

	private void addTableButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			String tableName;
			tableName = tableNameText.getText();
			schema.createTable(tableName);
			schema.applyChanges();
			refreshTableNames();
			currentTable = tableName;
			schemaTables.setListData(tables);
			tableNameText.setEnabled(false);
			addTableButton1.setEnabled(false);
			setSchemaTables();
			tableNameText.setText("table name ....");
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e.getMessage());
		}
	}

	private void addColumnButtonActionPerformed(java.awt.event.ActionEvent evt) {
		columnNameText.setEnabled(true);
		dataType.setEnabled(true);
		addColumnButton2.setEnabled(true);
		if (columnNameText.getText().equals("column name ....")) {
			columnNameText.setText("");
		}

	}

	private void addColumnButton2ActionPerformed(java.awt.event.ActionEvent evt)
			throws Exception {
		try {
			String columnName;
			columnName = columnNameText.getText();
			String dataTypeStr;
			dataTypeStr = dataType.getSelectedItem().toString();
			table2D = new Table(schema.getTableURL(currentTable));
			if (table2D.getColumns().length == 0) {
				table2D.createColumn(columnName, dataTypeStr);
			} else {
				table2D.createColumn(columnName, dataTypeStr);
				int length = table2D.getColumnsLength();
				for (int i = 0; i < length; i++) {
					table2D.insertCell(columnName, "null");
				}
			}
			table2D.applyChanges();
			columnNameText.setEnabled(false);
			dataType.setEnabled(false);
			addColumnButton2.setEnabled(false);

			Object[][] result = new Controller(schema, currentTable)
					.selectAll();
			String[][] printedTable;
			printedTable = new String[result[0].length][result.length];
			int counter1 = 0;
			int counter2 = 0;
			for (int i = 0; i < printedTable.length; i++) {
				for (int j = 0; j < printedTable[i].length; j++) {
					try {
						printedTable[counter2][counter1] = result[j][i]
								.toString();
					} catch (Exception e) {
						printedTable[counter2][counter1] = "NULL";
					}
					counter1++;
				}
				counter2++;
				counter1 = 0;
			}
			counter2 = 0;
			table = printedTable;
			table2D = new Table(schema.getTableURL(currentTable));
			columnNames = table2D.getColumns();
			addTableView();
			columnNameText.setText("column name ....");
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e.getMessage());
		}
	}

	private void runButtonActionPerformed(java.awt.event.ActionEvent evt)
			throws Exception {// GEN-FIRST:event_runButtonActionPerformed
		Validation validate = new Validation(query, schema);
		try {
			if (!validate.finalParsing()) 
			{
				queryField.setText("INVALID INPUT !!!");
			} 
			else 
			{
				currentTable = validate.getTabelName();
				Object[][] result;
				if (validate.getSQL() == 6) 
				{
					try 
					{
						currentTable = tables[tables.length - 2];
						refreshTableNames();
						setSchemaTables();
						queryField.setText("");
					} catch (Exception e)

					{
						currentTable = "";
						refreshTableNames();
						setSchemaTables();
						queryField.setText("");
					}
				}
				else
				{
					if (validate.getSelectedRows() != null) 
					{
						result = validate.getSelectedRows();
					}
					
					else
					{
					result = new Controller(schema, currentTable).selectAll();
					}
					String[][] printedTable;
					printedTable = new String[result[0].length][result.length];
					int counter1 = 0;
					int counter2 = 0;
					for (int i = 0; i < printedTable.length; i++) 
					{
						for (int j = 0; j < printedTable[i].length; j++) 
						{
							try 
							{
								printedTable[counter2][counter1] = result[j][i]
										.toString();
							}
							catch (Exception e) 
							{
								printedTable[counter2][counter1] = "NULL";
							}
							counter1++;
						}
						counter2++;
						counter1 = 0;
					}
					counter2 = 0;
					table = printedTable;
					table2D = new Table(schema.getTableURL(currentTable));
					columnNames = validate.getColumnsNames();
					if (columnNames == null) 
					{
						columnNames = table2D.getColumns();
					}
					addTableView();
					queryField.setText("");
				}
				
			}
		}
		catch (Exception e) 
		{
			queryField.setText("Please,Enter a valid query !!!");
		}
	}

	
	
	
	
	
	
	
	
	
	
	
	private void queryFieldKeyPressed(java.awt.event.KeyEvent evt) {
		int key = evt.getKeyCode();
		int linesCounter = 0;
		if (key == 10) {
			int linesNum = 0;
			String linesDate = queryField.getText() + "\n";
			for (int j = 0; j < linesDate.length(); j++) {
				if (linesDate.charAt(j) == 10) {
					linesNum++;
				}
			}
			query = new String[linesNum];
			int from = -1, to = 0;
			for (int i = 0; i < linesDate.length(); i++) {
				if (linesDate.charAt(i) == 10) {
					to = i;
					query[linesCounter] = linesDate.substring(from + 1, to);
					from = to;
					linesCounter++;
				}
			}
		}
	}// GEN-LAST:event_queryFieldKeyPressed

	/**
	 * Method to adjust the look
	 */
	private void adjustLook() {
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MagicQueriesGUI.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MagicQueriesGUI.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MagicQueriesGUI.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MagicQueriesGUI.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
	}

	// Variables declaration - do not modify
	private javax.swing.JMenuItem aboutUs;
	private javax.swing.JToggleButton addColumnButton;
	private javax.swing.JButton addColumnButton2;
	private javax.swing.JToggleButton addTableButton;
	private javax.swing.JButton addTableButton1;
	private javax.swing.JTextField columnNameText;
	private javax.swing.JMenuItem copyButton;
	private javax.swing.JMenuItem cutButton;
	private javax.swing.JComboBox dataType;
	private javax.swing.JMenu editButton;
	private javax.swing.JMenu fileButton;
	private javax.swing.JMenu helpMenu;
	private javax.swing.JMenuItem instructions;
	private javax.swing.JDesktopPane jDesktopPane1;
	private javax.swing.JDesktopPane jDesktopPane2;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JMenuItem jMenuItem1;
	private javax.swing.JMenuItem jMenuItem2;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JSeparator jSeparator2;
	private javax.swing.JSeparator jSeparator3;
	private javax.swing.JSeparator jSeparator4;
	private javax.swing.JSeparator jSeparator5;
	private javax.swing.JSeparator jSeparator6;
	private javax.swing.JTable jTable1;
	private javax.swing.JMenuItem pastButton;
	private javax.swing.JTextArea queryField;
	private javax.swing.JToggleButton runButton;
	private javax.swing.JList schemaTables;
	private javax.swing.JScrollPane scrollTable;
	private javax.swing.JTextField tableNameText;
	private javax.swing.JLabel text;
	private javax.swing.JTabbedPane view;
	private javax.swing.JMenu viewMenu;
	// End of variables declaration
}
